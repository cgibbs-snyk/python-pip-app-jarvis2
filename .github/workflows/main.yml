# SOURCES
# https://docs.snyk.io/scm-ide-and-ci-cd-integrations/snyk-ci-cd-integrations/github-actions-for-snyk-setup-and-checking-for-vulnerabilities/snyk-python-3.8-action
# https://docs.snyk.io/scm-ide-and-ci-cd-integrations/snyk-ci-cd-integrations/github-actions-for-snyk-setup-and-checking-for-vulnerabilities#snyk-monitor-example


name: Example workflow for Python using Snyk
on: push
jobs:
  security-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.8 and cache dependencies
        uses: actions/setup-python@v5
        with:
          python-version: '3.8' # Or your specific version
          cache: 'pip' # Enable pip caching
          
      - name: Install core project dependencies
        run: pip install -r requirements.txt
        continue-on-error: true

      - name: Install development dependencies
        run: pip install -r requirements-dev.txt
        continue-on-error: true

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          SNYK_API: https://api.eu.snyk.io # Keep your specific API endpoint
        with:
          args: --org=pipeline-examples --all-projects --severity-threshold=high --dev
        continue-on-error: true

  security-monitor:
    runs-on: ubuntu-latest
    needs: security-test
    steps:
      - uses: actions/checkout@master

      - name: Install core project dependencies
        run: pip install -r requirements.txt

      - name: Install development dependencies
        run: pip install -r requirements-dev.txt

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          SNYK_API: https://api.eu.snyk.io
        with:
          command: monitor
          args: --org=pipeline-examples --all-projects
